#!/usr/bin/env python3
"""
Cr√©er des donn√©es de d√©monstration pour tous les mod√®les
"""

import os
import sys
import django

# Configuration Django
sys.path.append('.')
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'medical_backend.settings')
django.setup()

from patients.models import Patient
from documents.models import Document
from reports.models import Report
from users.models import User
from django.utils import timezone
from datetime import date, timedelta
import random

def create_sample_data():
    """Cr√©er des donn√©es de d√©monstration"""
    print("üè• Cr√©ation de donn√©es de d√©monstration...")
    
    # R√©cup√©rer un utilisateur admin
    admin_user = User.objects.filter(is_superuser=True).first()
    if not admin_user:
        print("‚ùå Aucun utilisateur admin trouv√©")
        return
    
    # R√©cup√©rer un m√©decin
    doctor = User.objects.filter(username='medecin').first()
    if not doctor:
        print("‚ùå Aucun m√©decin trouv√©")
        return
    
    # R√©cup√©rer des patients
    patients = list(Patient.objects.all())
    if not patients:
        print("‚ùå Aucun patient trouv√©")
        return
    
    # Cr√©er des documents
    print("\nüìÑ Cr√©ation de documents...")
    documents_data = [
        {
            'title': 'Radiographie thoracique',
            'document_type': 'Radiologie',
            'patient': patients[0],
            'description': 'Radiographie thoracique de face et de profil',
            'created_by': doctor
        },
        {
            'title': 'Analyse sanguine compl√®te',
            'document_type': 'Biologie',
            'patient': patients[1],
            'description': 'NFS, glyc√©mie, cholest√©rol, triglyc√©rides',
            'created_by': doctor
        },
        {
            'title': '√âchographie abdominale',
            'document_type': 'Imagerie',
            'patient': patients[2],
            'description': '√âchographie des organes abdominaux',
            'created_by': doctor
        },
        {
            'title': 'ECG de repos',
            'document_type': 'Cardiologie',
            'patient': patients[0],
            'description': '√âlectrocardiogramme de repos',
            'created_by': doctor
        },
        {
            'title': 'Consultation cardiologique',
            'document_type': 'Consultation',
            'patient': patients[3],
            'description': 'Consultation de suivi cardiologique',
            'created_by': doctor
        }
    ]
    
    created_documents = 0
    for doc_data in documents_data:
        try:
            document = Document.objects.create(**doc_data)
            created_documents += 1
            print(f"‚úÖ Document cr√©√©: {document.title}")
        except Exception as e:
            print(f"‚ùå Erreur cr√©ation document {doc_data['title']}: {e}")
    
    # Cr√©er des rapports
    print("\nüìä Cr√©ation de rapports...")
    reports_data = [
        {
            'title': 'Rapport de consultation cardiologique',
            'report_type': 'Consultation',
            'patient': patients[0],
            'doctor': doctor,
            'report_date': date.today(),
            'summary': 'Patient pr√©sentant des douleurs thoraciques atypiques',
            'details': 'Examen clinique normal, ECG sans particularit√©. Surveillance recommand√©e.',
            'created_by': doctor
        },
        {
            'title': 'Rapport d\'hospitalisation',
            'report_type': 'Hospitalisation',
            'patient': patients[1],
            'doctor': doctor,
            'report_date': date.today() - timedelta(days=2),
            'summary': 'Hospitalisation pour diab√®te d√©s√©quilibr√©',
            'details': 'Glyc√©mie √©lev√©e, HbA1c √† 9.2%. Ajustement du traitement n√©cessaire.',
            'created_by': doctor
        },
        {
            'title': 'Rapport de sortie',
            'report_type': 'Sortie',
            'patient': patients[2],
            'doctor': doctor,
            'report_date': date.today() - timedelta(days=1),
            'summary': 'Sortie apr√®s appendicectomie',
            'details': 'Intervention r√©alis√©e sans complication. Repos et suivi recommand√©s.',
            'created_by': doctor
        }
    ]
    
    created_reports = 0
    for report_data in reports_data:
        try:
            report = Report.objects.create(**report_data)
            created_reports += 1
            print(f"‚úÖ Rapport cr√©√©: {report.title}")
        except Exception as e:
            print(f"‚ùå Erreur cr√©ation rapport {report_data['title']}: {e}")
    
    print(f"\nüéâ Donn√©es cr√©√©es avec succ√®s!")
    print(f"   - Documents: {created_documents}")
    print(f"   - Rapports: {created_reports}")
    print(f"   - Total patients: {Patient.objects.count()}")
    print(f"   - Total utilisateurs: {User.objects.count()}")

if __name__ == "__main__":
    create_sample_data()
